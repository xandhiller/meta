snippet printf "printf" wA
printf("$1\n"$2); $3
endsnippet


snippet pr "printf" w
printf("$1\n"$2); $3
endsnippet


snippet struct "structure" w
struct $1 {
	$2
};
typedef struct $1 $1_t;
endsnippet


snippet of "parantheses" i
($1)$2
endsnippet


snippet sc "scanf" w
scanf("$1", ${2:&var});
endsnippet


snippet scanf "scanf" wA
scanf("$1", ${2:&var});
endsnippet


snippet for "for-loop" wA
for (${1:int i}=${2:0}; ${3:i}${4:<}$5; ${6:i++}) {
	$7
}$8
endsnippet


snippet "/*  */" "Comment Delimiter" bA
/******************************************************************************/
endsnippet


snippet "\/[\*]+\/" "Comment Block" rbA
/******************************************************************************/
$1
/******************************************************************************/$0
endsnippet


snippet enum "enumeration" wA
enum {
	$1,
};
endsnippet

snippet switch "Switch statement" bA
switch ($1) {
	$2
}$0
endsnippet

snippet case "Case statement" bA
case ($1):
	$2
	break;
$0
endsnippet

snippet doc "Docstring" bA
/*
 * $1
 */
endsnippet

snippet def "#define" bA
#define $0
endsnippet

snippet com "Comment" bA
/* $1 */$0
endsnippet

snippet inc "#include" bA
#include $0
endsnippet

snippet and "logical and" wA
&&$0
endsnippet

snippet pp "parantheses" wA
($1)$0
endsnippet


snippet bb "braces" wA
{$1}$0
endsnippet


snippet {} "braces expand" wA
{
	$1
}$0
endsnippet
